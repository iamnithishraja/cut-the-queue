services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:    
      ZOOKEEPER_CLIENT_PORT: 2181    
      ZOOKEEPER_TICK_TIME: 2000    
      ZOOKEEPER_INIT_LIMIT: 10
    ports:
      - 2181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    entrypoint: >
      bash -c "
      echo 'Waiting for Kafka to be ready...'; 
      while ! nc -z kafka 9092; do sleep 1; done;
      echo 'Kafka is ready, creating topics...'; 
      kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic sms --if-not-exists && 
      kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic email --if-not-exists;
      echo 'Kafka topics created.'"
    restart: 'no'  

  sms-consumer:
    depends_on:
      - kafka
      - kafka-init  
    build:
      context: ./
      dockerfile: ./apps/consumers/Dockerfile
    environment:
      KAFKA_HOST: kafka:9092 
      KAFKA_CLIENT_ID: sms-consumer-client
      CONSUMER_TYPE: sms

  email-consumer:
    depends_on:
      - kafka
      - kafka-init 
    build:
      context: ./
      dockerfile: ./apps/consumers/Dockerfile
    environment:
      KAFKA_HOST: kafka:9092  
      KAFKA_CLIENT_ID: email-consumer-client
      CONSUMER_TYPE: email
